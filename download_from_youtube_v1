import os
import subprocess
import re

# === CONFIGURA√á√ïES ===
playlist_url = 'https://youtu.be/bd7LxRIF3ts?si=ojhXRjFkw0ifdkRh'
saida = r"C:\Users\Maria Clara\Downloads"
modo = 'video'  # op√ß√µes: 'video', 'audio-mp4', 'audio-mp3'
# ======================

os.makedirs(saida, exist_ok=True)

# Define formato e p√≥s-processamento conforme modo
if modo == 'video':
    # For√ßa 720p exato, com fallback para melhor qualidade dispon√≠vel
    format_opt = 'bestvideo[height=720][ext=mp4][vcodec^=avc1]+bestaudio[ext=m4a]/bestvideo[ext=mp4][vcodec^=avc1][height<=720]+bestaudio[ext=m4a]/best[ext=mp4][height<=720]'
    # Merge simples sem normaliza√ß√£o (para evitar erros de compatibilidade)
    post = '--merge-output-format mp4'
    ext = 'mp4'
elif modo == 'audio-mp4':
    format_opt = 'bestaudio[ext=m4a]'
    # Normaliza√ß√£o mais simples para √°udio
    post = '--audio-quality 0'
    ext = 'm4a'
elif modo == 'audio-mp3':
    format_opt = 'bestaudio'
    # Extrai √°udio em MP3 com qualidade m√°xima
    post = '--extract-audio --audio-format mp3 --audio-quality 0'
    ext = 'mp3'
else:
    raise ValueError("‚ùå Modo inv√°lido. Use 'video', 'audio-mp4' ou 'audio-mp3'.")

# Monta o comando yt-dlp
command = f"""
yt-dlp -o "{saida}/%(artist)s - %(title)s.{ext}" \
--yes-playlist \
--no-overwrites \
--add-metadata \
--embed-thumbnail \
--parse-metadata "%(title)s:%(artist)s - %(title)s" \
{post} \
-f "{format_opt}" "{playlist_url}"
"""

# Limpa espa√ßos extras
command = re.sub(r'\s+', ' ', command).strip()

# Executa
print(f"üöÄ Baixando em modo: {modo}")
print(f"üìπ Resolu√ß√£o: 720p (quando dispon√≠vel)")
print(f"üéµ Qualidade de √°udio: M√°xima")
subprocess.run(command, shell=True)
print(f"‚úÖ Finalizado! Arquivos salvos em: {saida}")
